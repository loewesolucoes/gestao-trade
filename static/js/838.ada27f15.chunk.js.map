{"version":3,"file":"static/js/838.ada27f15.chunk.js","mappings":"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","sources":["components/input.tsx","pages/configuracoes/index.tsx","../node_modules/moment/locale/pt-br.js"],"sourcesContent":["\"use client\";\r\nimport BigNumber from 'bignumber.js';\r\nimport moment from 'moment';\r\n\r\ninterface CustomProps extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\r\n  isNumber?: boolean,\r\n  isPercent?: boolean,\r\n  groupSymbolLeft?: string,\r\n  groupSymbolRight?: string,\r\n  onChange: React.Dispatch<React.SetStateAction<any>>,\r\n  value: any,\r\n}\r\n\r\nexport function Input(props: CustomProps) {\r\n  const { onChange, isNumber, groupSymbolLeft, groupSymbolRight, isPercent, value, ...otherProps } = props;\r\n  const isInputNumber = props.type === 'number' || isNumber;\r\n  const isInputDate = props.type === 'date';\r\n  const isInputMonth = props.type === 'month';\r\n  const isTextArea = props.type === 'textarea';\r\n\r\n  function onChangeInput(event: any) {\r\n    const { value } = event.target;\r\n\r\n    const onChangeOrDefault = onChange || function () { };\r\n\r\n    if (isPercent)\r\n      onChangeOrDefault(BigNumber(value).div(100));\r\n    else if (isInputNumber)\r\n      onChangeOrDefault(BigNumber(value));\r\n    else if (isInputDate)\r\n      onChangeOrDefault(moment(value, 'YYYY-MM-DD').toDate());\r\n    else if (isInputMonth)\r\n      onChangeOrDefault(moment(value, 'YYYY-MM').toDate());\r\n    else\r\n      onChangeOrDefault(value);\r\n  }\r\n\r\n  const inputValue = parseInputValue(value, isInputNumber, isInputDate, isInputMonth, isPercent);\r\n  const input = isTextArea ? <textarea className=\"form-control\" onChange={onChangeInput} value={inputValue} {...otherProps as any} /> : <input className=\"form-control\" onChange={onChangeInput} value={inputValue} {...otherProps} />;\r\n\r\n  return groupSymbolLeft || groupSymbolRight ? (\r\n    <div className=\"input-group mb-3\">\r\n      {groupSymbolLeft && <span className=\"input-group-text\">{groupSymbolLeft}</span>}\r\n      {input}\r\n      {groupSymbolRight && <span className=\"input-group-text\">{groupSymbolRight}</span>}\r\n    </div>\r\n  ) : input;\r\n}\r\n\r\nfunction parseInputValue(value: any, isInputNumber?: boolean, isInputDate?: boolean, isInputMonth?: boolean, isPercent?: boolean) {\r\n  if (isInputNumber)\r\n    return parseNumber(value, { isPercent });\r\n\r\n  if (isInputDate)\r\n    return moment(value).format('YYYY-MM-DD');\r\n\r\n  if (isInputMonth)\r\n    return moment(value).format('YYYY-MM');\r\n\r\n  return value || ''\r\n}\r\n\r\nfunction parseNumber(value: BigNumber, { isPercent }: any) {\r\n  if (value == null || isNaN(value.toNumber()))\r\n    return '';\r\n\r\n  return isPercent ? value.times(100).toNumber() : value.toNumber();\r\n}\r\n\r\n","import './index.scss';\nimport { Layout } from '../../shared/layout';\nimport { Loader } from '../../components/loader';\nimport { useEffect, useState } from 'react';\nimport { useEnv } from '../../contexts/env';\nimport { useStorage } from '../../contexts/storage';\nimport { Parametro } from '../../repositories/parametros';\nimport { Input } from '../../components/input';\nimport { AuthButton } from '../../components/auth-button';\n\nexport default function () {\n  const [isLoading, setIsLoading] = useState(false);\n  const { isDbOk, exportOriginalDumpToFileAndDownload, importOriginalDumpFromFile, repository, refresh } = useStorage();\n  const { aplicationName } = useEnv()\n  const [file, setFile] = useState<File>()\n  const [params, setParams] = useState<Parametro[]>([])\n  const [currentParam, setCurrentParam] = useState<Parametro>()\n\n  useEffect(() => {\n    document.title = `Configurações | ${process.env.REACT_APP_TITLE}`\n  }, []);\n\n  useEffect(() => {\n    if (isDbOk) {\n      loadParams();\n    }\n  }, [isDbOk]);\n\n  async function loadParams() {\n    setIsLoading(true);\n\n    const paramsDict = await repository.params.getDict();\n\n    setParams(Object.values(paramsDict));\n    setIsLoading(false);\n  }\n\n  function handleChange(event: any) {\n    setFile(event.target.files[0])\n  }\n\n  async function exportToDb() {\n    setIsLoading(true);\n\n    await exportOriginalDumpToFileAndDownload(`${aplicationName}.db`);\n\n    setIsLoading(false);\n  }\n\n  async function importFromDb() {\n    setIsLoading(true);\n\n    await importOriginalDumpFromFile(file);\n\n    alert('arquivo carregado com sucesso');\n    setIsLoading(false);\n  }\n\n  async function saveParam(currentParam?: Parametro) {\n    if (currentParam == null)\n      return alert('Parâmetro invalido.');\n\n    setIsLoading(true);\n    await repository.params.set(currentParam.chave, currentParam.valor);\n    setCurrentParam(undefined);\n\n    await refresh();\n    setIsLoading(false);\n  }\n\n  const isAllLoading = isLoading || !isDbOk\n\n  return (\n    <Layout>\n      <main className=\"main container my-3\">\n        <h1>Configurações da aplicação</h1>\n        <article className={`configs ${isAllLoading && 'is-loading'}`}>\n          {isAllLoading\n            ? <Loader />\n            : (\n              <>\n                <section className=\"card\">\n                  <h5 className=\"card-header\">Carregar dados de um arquivo</h5>\n                  <div className=\"card-body\">\n                    <div className=\"mb-3\">\n                      <label htmlFor=\"formFile\" className=\"form-label\">Escolha um arquivo do tipo .db</label>\n                      <input className=\"form-control\" type=\"file\" id=\"formFile\" accept=\".db,.sqlite\" onChange={handleChange} />\n                    </div>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={importFromDb}>Clique para carregar dados de um arquivo</button>\n                  </div>\n                </section>\n                <section className=\"card\">\n                  <h5 className=\"card-header\">Exportar dados para um arquivo</h5>\n                  <div className=\"card-body\">\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={exportToDb}>Clique para exportar dados para um arquivo</button>\n                  </div>\n                </section>\n                <section className=\"card gdrive\">\n                  <h5 className=\"card-header\">Google drive</h5>\n                  <div className=\"card-body\">\n                    <AuthButton />\n                  </div>\n                </section>\n                <section className=\"card\">\n                  <h5 className=\"card-header\">Parâmetros</h5>\n                  <div className=\"card-body d-flex flex-column gap-3\">\n                    <div className=\"flex-grow-1\">\n                      <label htmlFor=\"chave\" className=\"form-label\">Nome chave: </label>\n                      <select className={`form-select`} id=\"chave\" onChange={e => setCurrentParam(params[e.target.value])}>\n                        <option>Escolha um parâmetro</option>\n                        {params.map((x, i) => (\n                          <option key={x.chave} value={i}>{x.chave}</option>\n                        ))}\n                      </select>\n                    </div>\n                    {currentParam && (\n                      <>\n                        <div className=\"flex-grow-1\">\n                          <label htmlFor=\"valor\" className=\"form-label\">Valor: </label>\n                          <Input type=\"text\" className=\"form-control\" id=\"valor\" onChange={x => setCurrentParam({ ...currentParam, valor: x } as any)} value={currentParam?.valor} placeholder=\"Descrição\" />\n                        </div>\n                        <button type=\"button\" className=\"btn btn-secondary w-100\" onClick={e => saveParam(currentParam)}>Salvar</button>\n                      </>\n                    )}\n                  </div>\n                </section>\n              </>\n            )}\n        </article>\n      </main>\n    </Layout>\n  );\n}\n","//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var ptBr = moment.defineLocale('pt-br', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays:\n            'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(\n                '_'\n            ),\n        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'poucos segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        invalidDate: 'Data inválida',\n    });\n\n    return ptBr;\n\n})));\n"],"names":["Input","props","onChange","isNumber","groupSymbolLeft","groupSymbolRight","isPercent","value","otherProps","isInputNumber","type","isInputDate","isInputMonth","isTextArea","onChangeInput","event","target","onChangeOrDefault","BigNumber","div","moment","toDate","inputValue","_ref","isNaN","toNumber","times","parseNumber","format","parseInputValue","input","_jsx","className","_jsxs","children","isLoading","setIsLoading","useState","isDbOk","exportOriginalDumpToFileAndDownload","importOriginalDumpFromFile","repository","refresh","useStorage","aplicationName","useEnv","file","setFile","params","setParams","currentParam","setCurrentParam","useEffect","document","title","concat","process","async","paramsDict","getDict","Object","values","loadParams","isAllLoading","Layout","Loader","_Fragment","htmlFor","id","accept","files","onClick","alert","AuthButton","e","map","x","i","chave","valor","placeholder","set","undefined","saveParam","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","this","day","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","invalidDate","factory","require"],"sourceRoot":""}