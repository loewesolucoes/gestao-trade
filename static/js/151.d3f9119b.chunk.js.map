{"version":3,"file":"static/js/151.d3f9119b.chunk.js","mappings":"mBAW0BA,OAAOC,aCRjCC,QAAQC,MAAM,mCAEd,MAAMC,EAAc,IAAIC,OAAyE,GAAAC,OAAiCC,gBAAsB,wBAKxJH,EAAYI,QAAUC,GAAKP,QAAQQ,MAAM,0BAA2BD,GACpEL,EAAYO,UAAaC,IAAW,IAADC,EACjCX,QAAQC,MAAM,wBAAyBS,GAEtB,QAAjBC,EAAID,EAAME,KAAKC,UAAE,IAAAF,GAAbA,EAAeG,WAAW,OAwChC,SAAuBJ,GACrB,MAAM,GAAEG,GAAOH,EAAME,KACfG,EAAS,GAAAX,OAAGS,GAAKG,MAAM,KAAK,GAElChB,QAAQiB,IAAI,gBAAiBJ,EAAIE,GAEjCG,EAA6BH,GAAQI,eAAeC,YAAYV,EAAME,KACxE,CA9CIS,CAAcX,GAEdY,KAAKF,YAAYV,EAAME,KACzB,EAGFU,KAAKb,UAAaC,IAChBV,QAAQC,MAAM,iBAAkBS,GAEhCR,EAAYkB,YAAYV,EAAME,KAAK,EAGrC,MAAMM,EAA+B,CAAC,EAChCK,EAAmB,IAAIC,iBDhBc,2BCkB3CD,EAAiBE,eAAkBf,IAAYV,QAAQQ,MAAM,kCAAmCE,EAAM,EACtGa,EAAiBd,UAAaC,IAC5B,MAAM,GAAEG,EAAE,OAAEE,EAAM,YAAEW,EAAW,eAAEP,GAAmBT,EAAME,KAI1D,GAFAZ,QAAQiB,IAAI,6BAA8BJ,EAAIE,GAEnC,YAAPF,EAAkB,CACpB,MAAMc,EAAuB,IAAIH,iBAAiBE,GAC5CE,EAA0B,IAAIJ,iBAAiBL,GAErDQ,EAAqBF,eAAkBf,IAAYV,QAAQQ,MAAM,sCAAuCE,EAAM,EAC9GiB,EAAqBlB,UAAYC,IAC/BV,QAAQC,MAAM,iCAAkCS,GAEhDR,EAAYkB,YAAYV,EAAME,KAAK,EAGrCM,EAA6BH,GAAU,CACrCW,YAAaC,EACbR,eAAgBS,EAEpB,GAYF5B,QAAQC,MAAM,gC","sources":["workers/common.ts","workers/db-broadcast.ts"],"sourcesContent":["export enum WorkersActions {\r\n  LOAD_ALL = \"loadAll\",\r\n  CONNECT = \"connect\",\r\n}\r\n\r\nexport interface GestaoMessage {\r\n  id: number;\r\n  action: WorkersActions;\r\n  params: any;\r\n}\r\n\r\nexport const UNIQUE_KEY = crypto.randomUUID();\r\nexport const DB_BROADCAST_CHANNEL_SW_KEY = 'DB_BROADCAST_CHANNEL_SW'","import { DB_BROADCAST_CHANNEL_SW_KEY, GestaoMessage } from \"./common\";\r\nimport { WorkerDatabaseConnector } from \"./db-connector\";\r\n\r\nconsole.debug('database-broadcast-worker start');\r\n\r\nconst sqlJsWorker = new Worker(process.env.NODE_ENV === 'development' ? `${process.env.PUBLIC_URL}/worker.sql-wasm-debug.js` : `${process.env.PUBLIC_URL}/worker.sql-wasm.js`);\r\n// const worker = new Worker((new URL(\"sql.js/dist/worker.sql-wasm.js\", import.meta.url)));\r\n\r\n/* eslint-disable no-restricted-globals */\r\n\r\nsqlJsWorker.onerror = e => console.error(\"Database worker error: \", e);\r\nsqlJsWorker.onmessage = (event) => {\r\n  console.debug('sqlJsWorker.onmessage', event);\r\n\r\n  if (event.data.id?.startsWith('sw-')) {\r\n    sendSWMessage(event);\r\n  } else {\r\n    self.postMessage(event.data);\r\n  }\r\n}\r\n\r\nself.onmessage = (event: MessageEvent<GestaoMessage>) => {\r\n  console.debug('self.onmessage', event);\r\n\r\n  sqlJsWorker.postMessage(event.data);\r\n};\r\n\r\nconst SERVICE_WORKERS_TO_BROADCAST = {} as { [key: string]: { sendChannel: BroadcastChannel, receiveChannel: BroadcastChannel } }\r\nconst broadcastChannel = new BroadcastChannel(DB_BROADCAST_CHANNEL_SW_KEY)\r\n\r\nbroadcastChannel.onmessageerror = (event) => { console.error('broadcastChannel.onmessageerror', event); }\r\nbroadcastChannel.onmessage = (event) => {\r\n  const { id, swName, sendChannel, receiveChannel } = event.data\r\n  \r\n  console.log('broadcastChannel.onmessage', id, swName);\r\n  \r\n  if (id === 'connect') {\r\n    const sendBroadcastChannel = new BroadcastChannel(sendChannel);\r\n    const receiveBroadcastChannel = new BroadcastChannel(receiveChannel);\r\n    \r\n    sendBroadcastChannel.onmessageerror = (event) => { console.error('sendBroadcastChannel.onmessageerror', event); }\r\n    sendBroadcastChannel.onmessage = event => {\r\n      console.debug('sendBroadcastChannel.onmessage', event);\r\n    \r\n      sqlJsWorker.postMessage(event.data);\r\n    };\r\n\r\n    SERVICE_WORKERS_TO_BROADCAST[swName] = {\r\n      sendChannel: sendBroadcastChannel,\r\n      receiveChannel: receiveBroadcastChannel,\r\n    }\r\n  }\r\n}\r\n\r\nfunction sendSWMessage(event: MessageEvent<any>) {\r\n  const { id } = event.data;\r\n  const swName = `${id}`.split(':')[0];\r\n\r\n  console.log('sendSWMessage', id, swName);\r\n\r\n  SERVICE_WORKERS_TO_BROADCAST[swName].receiveChannel.postMessage(event.data);\r\n}\r\n\r\nconsole.debug('database-broadcast-worker end');\r\n\r\nexport { };\r\n\r\n"],"names":["crypto","randomUUID","console","debug","sqlJsWorker","Worker","concat","process","onerror","e","error","onmessage","event","_event$data$id","data","id","startsWith","swName","split","log","SERVICE_WORKERS_TO_BROADCAST","receiveChannel","postMessage","sendSWMessage","self","broadcastChannel","BroadcastChannel","onmessageerror","sendChannel","sendBroadcastChannel","receiveBroadcastChannel"],"sourceRoot":""}