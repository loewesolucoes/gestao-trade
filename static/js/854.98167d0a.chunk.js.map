{"version":3,"file":"static/js/854.98167d0a.chunk.js","mappings":"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","sources":["repositories/database-connector.ts","utils/repository.ts","repositories/default.ts","repositories/acoes.ts","workers/common.ts","workers/db-connector.ts","repositories/parametros.ts","workers/brapi.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["\r\nexport interface IDatabase {\r\n  exec(sql: string, params?: any): Promise<initSqlJs.QueryExecResult[]>\r\n  export(): Promise<Uint8Array>\r\n  open(data?: ArrayLike<number> | Buffer | null): Promise<any>\r\n}\r\n\r\n\r\nexport class DatabaseConnector implements IDatabase {\r\n  private currentId = 0;\r\n  private readonly worker: Worker;\r\n  private readonly onMessages: { [key: string]: (event: MessageEvent) => void } = {};\r\n\r\n  constructor() {\r\n    this.worker = new Worker(new URL(\"../workers/db-broadcast.ts\", import.meta.url));\r\n    this.worker.onerror = e => console.log(\"Worker error: \", e);\r\n    this.worker.onmessage = (event) => {\r\n      const { id } = event.data;\r\n      const action = this.onMessages[id];\r\n\r\n      if (action == null) {\r\n        console.error('invalid message id', id, event);\r\n\r\n        throw new Error(`invalid message id => ${id}`);\r\n      }\r\n\r\n      action(event);\r\n      delete this.onMessages[id];\r\n    }\r\n  }\r\n\r\n  public async exec(sql: string, params?: any): Promise<initSqlJs.QueryExecResult[]> {\r\n    const nextId = `exec-${this.currentId++}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.onMessages[nextId] = event => {\r\n        console.debug('DatabaseConnector.onmessage', event.data.id, nextId, event);\r\n\r\n        if (event.data.id === nextId) {\r\n          if (event.data.error)\r\n            reject(event.data);\r\n          else\r\n            resolve(event.data.results);\r\n        }\r\n      };\r\n\r\n      console.debug('DatabaseConnector.sending', 'exec', nextId, sql, params);\r\n\r\n      this.worker.postMessage({\r\n        id: nextId,\r\n        action: \"exec\",\r\n        sql: sql,\r\n        params: params\r\n      });\r\n    });\r\n  }\r\n\r\n  public async export(): Promise<Uint8Array> {\r\n    const nextId = `export-${this.currentId++}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.onMessages[nextId] = event => {\r\n        console.debug('DatabaseConnector.onmessage', event.data.id, nextId, event);\r\n        if (event.data.id === nextId) {\r\n          if (event.data.error)\r\n            reject(event.data);\r\n          else\r\n            resolve(event.data.buffer);\r\n        }\r\n      };\r\n\r\n      console.debug('DatabaseConnector.sending', 'export', nextId);\r\n\r\n      this.worker.postMessage({\r\n        id: nextId,\r\n        action: \"export\",\r\n      });\r\n    });\r\n  }\r\n\r\n  public async open(data?: ArrayLike<number> | Buffer | null): Promise<any> {\r\n    const nextId = `open-${this.currentId++}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.onMessages[nextId] = event => {\r\n        console.debug('DatabaseConnector.onmessage', event.data.id, nextId, event);\r\n        if (event.data.id === nextId) {\r\n          if (event.data.error)\r\n            reject(event.data);\r\n          else\r\n            resolve(event.data);\r\n        }\r\n      };\r\n\r\n      console.debug('DatabaseConnector.sending', 'open', nextId);\r\n\r\n      this.worker.postMessage({\r\n        id: nextId,\r\n        action: \"open\",\r\n        buffer: data, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n      });\r\n    });\r\n  }\r\n}","import localforage from 'localforage'\r\nimport { Buffer } from 'buffer';\r\nimport { DefaultRepository } from '../repositories/default';\r\nimport { DatabaseConnector } from '../repositories/database-connector';\r\n\r\nconst BUFFER_TYPE = 'base64';\r\n\r\nexport class RepositoryUtil {\r\n  public static readonly DB_NAME = 'gestao-trade.settings.db';\r\n\r\n  public static async create(data?: ArrayLike<number> | Buffer | null) {\r\n    const localDump = await RepositoryUtil.exportLocalDump();\r\n\r\n    if (data == null && localDump != null) {\r\n      data = Buffer.from(localDump, BUFFER_TYPE);\r\n    }\r\n\r\n    const db = new DatabaseConnector();\r\n\r\n    await db.open(data);\r\n\r\n    const repo = new DefaultRepository(db);\r\n\r\n    // @ts-ignore\r\n    await repo.runMigrations();\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      //@ts-ignore\r\n      window._db = db;\r\n    }\r\n\r\n    // repo.beforeClose();\r\n\r\n    return repo;\r\n  }\r\n\r\n  public static async persistLocalDump(dump?: string): Promise<void> {\r\n    await localforage.setItem(RepositoryUtil.DB_NAME, dump || '');\r\n  }\r\n\r\n  public static async exportLocalDump(): Promise<string | null> {\r\n    return await localforage.getItem<string>(RepositoryUtil.DB_NAME);\r\n  }\r\n\r\n  public static generateDumpFromExport(exp: Uint8Array) {\r\n    return Buffer.from(exp).toString(BUFFER_TYPE);\r\n  }\r\n}","import BigNumber from \"bignumber.js\";\r\nimport moment from \"moment\";\r\nimport { RepositoryUtil } from \"../utils/repository\";\r\nimport { IDatabase } from \"./database-connector\";\r\n\r\nexport enum MapperTypes {\r\n  DATE,\r\n  DATE_TIME,\r\n  NUMBER,\r\n  BOOLEAN,\r\n  IGNORE,\r\n}\r\n\r\nexport enum TableNames {\r\n  ACOES = \"acoes\",\r\n  PARAMETROS = \"parametros\",\r\n}\r\n\r\nexport interface DefaultFields {\r\n  id: number\r\n  createdDate: Date\r\n  updatedDate?: Date\r\n}\r\n\r\nconst RUNNED_MIGRATION_CODE = 'runned';\r\n\r\nexport class DefaultRepository {\r\n  protected readonly DEFAULT_MAPPING = { createdDate: MapperTypes.DATE_TIME, updatedDate: MapperTypes.DATE_TIME, monthYear: MapperTypes.IGNORE };\r\n  public constructor(protected db: IDatabase) { }\r\n\r\n  public async saveAll(tableName: TableNames, items: DefaultFields[]) {\r\n    let allParams = {};\r\n    let fullCommand = '';\r\n\r\n    items.forEach((x, i) => {\r\n      let execution = {} as any;\r\n\r\n      if (x.id == null)\r\n        execution = this.createInsertCommand(tableName, x, `${i}`);\r\n      else\r\n        execution = this.createUpdateCommand(tableName, x, `${i}`);\r\n\r\n      const { command, params } = execution;\r\n\r\n      fullCommand = `${fullCommand};${command}`\r\n      allParams = { ...allParams, ...params }\r\n    })\r\n\r\n    console.debug('saveAll', fullCommand, allParams)\r\n\r\n    this.db.exec(fullCommand, allParams);\r\n\r\n    await this.persistDb();\r\n  }\r\n\r\n  public async save(tableName: TableNames, data: any) {\r\n    let result = {} as any;\r\n\r\n    if (data?.id != null)\r\n      result = await this.update(tableName, data)\r\n    else\r\n      result = await this.insert(tableName, data);\r\n\r\n    await this.persistDb();\r\n\r\n    return result;\r\n  }\r\n\r\n  public async delete(tableName: TableNames, id: number) {\r\n    let result = {} as any;\r\n\r\n    await this.db.exec(`delete from ${tableName} where id = $id`, { \"$id\": id })\r\n\r\n    await this.persistDb();\r\n\r\n    return result;\r\n  }\r\n\r\n  public async list<T>(tableName: TableNames): Promise<T[]> {\r\n    await Promise.resolve();\r\n\r\n    const result = await this.db.exec(`SELECT * FROM ${tableName} order by createdDate desc`);\r\n\r\n    if (!Array.isArray(result))\r\n      throw new Error(`${tableName} não encontrado (a)`);\r\n\r\n    return this.parseSqlResultToObj(result, this.DEFAULT_MAPPING)[0] || [];\r\n  }\r\n\r\n  public async get<T>(tableName: TableNames, id: string): Promise<T> {\r\n    await Promise.resolve();\r\n\r\n    const result = await this.db.exec(`select * from ${tableName} where id = $id`, { \"$id\": id });\r\n\r\n    if (result.length === 0)\r\n      throw new Error(`${tableName} não encontrado (a)`);\r\n\r\n    return this.parseSqlResultToObj(result, this.DEFAULT_MAPPING)[0][0];\r\n  }\r\n\r\n  protected async insert(tableName: TableNames, data: any) {\r\n    const { command, params, nextData } = this.createInsertCommand(tableName, data);\r\n    const fullCommand = `${command};SELECT LAST_INSERT_ROWID();`\r\n\r\n    const result = await this.db.exec(fullCommand, params);\r\n\r\n    nextData.id = result[0].values[0][0];\r\n\r\n    return nextData;\r\n  }\r\n\r\n  protected createInsertCommand(tableName: TableNames, data: any, paramsPrefix: string = '') {\r\n    const nextData = { ...data, createdDate: new Date() };\r\n    const { keys, params } = this.parseToCommand(nextData, paramsPrefix);\r\n    const command = `INSERT INTO ${tableName} (${keys.join(', ')}) VALUES (${keys.map(k => `$${k}${paramsPrefix}`).join(', ')})`;\r\n\r\n    return { command, params, nextData }\r\n  }\r\n\r\n  protected async update(tableName: TableNames, data: any) {\r\n    const { command, params } = this.createUpdateCommand(tableName, data);\r\n\r\n    await this.db.exec(command, params);\r\n\r\n    return this.get(tableName, data.id);\r\n  }\r\n\r\n  protected createUpdateCommand(tableName: TableNames, data: any, paramsPrefix: string = '') {\r\n    const nextData = { ...data, updatedDate: new Date() };\r\n    const { keys, params } = this.parseToCommand(nextData, paramsPrefix);\r\n    const command = `UPDATE ${tableName} SET ${keys.map(k => `${k}=$${k}${paramsPrefix}`).join(', ')} WHERE id=$id${paramsPrefix}`;\r\n\r\n    return { command, params, nextData }\r\n  }\r\n\r\n  protected parseSqlResultToObj(result: initSqlJs.QueryExecResult[], mapper?: { [key: string]: MapperTypes }) {\r\n    return result.map(res => res.values.map(values => res.columns.reduce((p, n, i) => {\r\n      const value = values[i];\r\n      let original = true;\r\n\r\n      if (n !== 'id' && value != null) {\r\n        if (mapper != null) {\r\n          if (mapper[n] === MapperTypes.DATE) {\r\n            p[n] = moment(value as any, 'YYYY-MM-DD').toDate(); //2022-11-03 00:00:00\r\n            original = false;\r\n          } else if (mapper[n] === MapperTypes.DATE_TIME) {\r\n            p[n] = moment(value as any, 'YYYY-MM-DD hh:mm:ss').toDate(); //2022-11-03 00:00:00\r\n            original = false;\r\n          } else if (mapper[n] === MapperTypes.NUMBER) {\r\n            p[n] = value;\r\n            original = false;\r\n          } else if (mapper[n] === MapperTypes.BOOLEAN) {\r\n            p[n] = !!value;\r\n            original = false;\r\n          } else if (mapper[n] === MapperTypes.IGNORE) {\r\n            original = false;\r\n          }\r\n        }\r\n\r\n        if (original && typeof (value) === 'number') {\r\n          p[n] = BigNumber(value);\r\n          original = false;\r\n        }\r\n      }\r\n\r\n      if (original)\r\n        p[n] = value;\r\n\r\n      return p;\r\n    }, {} as any)));\r\n  }\r\n\r\n  protected parseToCommand(nextData: any, paramsPrefix: string = '') {\r\n    const keys = Object.keys(nextData).filter(k => nextData[k] !== undefined);\r\n    const params = keys.reduce((p, n) => {\r\n      let value = nextData[n] ?? null;\r\n\r\n      if (value instanceof Date) {\r\n        value = moment(value).format();\r\n      }\r\n\r\n      if (value?._isBigNumber) {\r\n        value = value.toNumber();\r\n      }\r\n\r\n      p[`$${n}${paramsPrefix}`] = value;\r\n\r\n      return p;\r\n    }, {} as any);\r\n\r\n    return { keys, params };\r\n  }\r\n\r\n  protected async runMigrations() {\r\n    await Promise.resolve();\r\n\r\n    await this.db.exec(`CREATE TABLE IF NOT EXISTS \"migrations\" (\"id\" INTEGER NOT NULL,\"name\" TEXT NULL DEFAULT NULL,\"executedDate\" DATETIME NULL,PRIMARY KEY (\"id\"));`);\r\n\r\n    const result = await this.db.exec('select * from \"migrations\"');\r\n    const migrations = (this.parseSqlResultToObj(result)[0] || []).reduce((p, n) => { p[n.name] = n; return p; }, {} as any);\r\n\r\n    if (migrations['parametros'] == null) {\r\n      await this.db.exec(`CREATE TABLE IF NOT EXISTS \"parametros\" (\"id\" INTEGER NOT NULL,\"chave\" TEXT NOT NULL,\"valor\" TEXT NULL, \"createdDate\" DATETIME NOT NULL, \"updatedDate\" DATETIME NULL DEFAULT NULL,PRIMARY KEY (\"id\"));`);\r\n      migrations['parametros'] = RUNNED_MIGRATION_CODE;\r\n    }\r\n\r\n    if (migrations['acoes'] == null) {\r\n      await this.db.exec(`CREATE TABLE IF NOT EXISTS \"acoes\" (\"id\" INTEGER NOT NULL,\"nome\" TEXT NOT NULL,\"logo\" TEXT NULL,\"codigo\" TEXT NULL, \"tipo\" INTEGER NULL, \"active\" INTEGER NULL, \"valorDeMercado\" REAL NULL, \"setor\" TEXT NULL, \"createdDate\" DATETIME NOT NULL, \"updatedDate\" DATETIME NULL DEFAULT NULL,PRIMARY KEY (\"id\"));`);\r\n      migrations['acoes'] = RUNNED_MIGRATION_CODE;\r\n    }\r\n\r\n    if (migrations['desativar_acoes'] == null) {\r\n      await this.db.exec(`UPDATE acoes SET \"active\" = 0 WHERE 1 = 1;`);\r\n      migrations['desativar_acoes'] = RUNNED_MIGRATION_CODE;\r\n    }\r\n\r\n    // TODO: Add parametros iniciais em branco\r\n\r\n    const runnedMigrations = Object.keys(migrations).filter(x => migrations[x] === RUNNED_MIGRATION_CODE).reduce((p, n) => { p.push({ name: n, executedDate: new Date() }); return p; }, [] as any)\r\n\r\n    let allParams = {};\r\n    let fullCommand = '';\r\n\r\n    if (runnedMigrations.length > 0) {\r\n      runnedMigrations.forEach((x, i) => {\r\n        const { keys, params } = this.parseToCommand(x, `${i}`);\r\n        const command = `INSERT INTO \"migrations\" (${keys.join(', ')}) VALUES (${keys.map(k => `$${k}${i}`).join(', ')})`;\r\n\r\n        fullCommand = `${fullCommand};${command}`\r\n        allParams = { ...allParams, ...params }\r\n      });\r\n\r\n      await this.db.exec(fullCommand, allParams);\r\n    }\r\n\r\n    await this.persistDb();\r\n  }\r\n\r\n  public async exportOriginalDump() {\r\n    return await this.db.export();\r\n  }\r\n\r\n  public async persistDb() {\r\n    const dump = await this.exportDump();\r\n\r\n    await RepositoryUtil.persistLocalDump(dump)\r\n    console.debug(\"persistDb ok\");\r\n  }\r\n\r\n  private async exportDump() {\r\n    await Promise.resolve();\r\n    const exp = await this.db.export();\r\n\r\n    return await RepositoryUtil.generateDumpFromExport(exp)\r\n  }\r\n\r\n  private beforeClose() {\r\n    const beforeUnload = (e: any) => {\r\n      const message = \"Ter certeza que deseja sair?\";\r\n      const event = e || window.event;\r\n\r\n      // For IE and Firefox\r\n      if (event) {\r\n        event.returnValue = message;\r\n      }\r\n\r\n      this.persistDb();\r\n\r\n      // For Safari\r\n      return message;\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", beforeUnload);\r\n  }\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { DefaultFields, DefaultRepository, MapperTypes, TableNames } from \"./default\";\r\n\r\nexport enum StockType {\r\n  COMPANY = 1,\r\n  FII = 2,\r\n  ETFS = 3,\r\n  OTHERS = 4,\r\n}\r\n\r\nexport interface Acoes extends DefaultFields {\r\n  code: any;\r\n  nome?: string\r\n  codigo: string\r\n  logo?: string\r\n  tipo?: StockType\r\n  active?: boolean\r\n  setor?: string\r\n  valorDeMercado?: BigNumber\r\n}\r\n\r\ninterface AcoesPaginado {\r\n  acoes: Acoes[]\r\n  total: number\r\n}\r\n\r\nexport class AcoesRepository extends DefaultRepository {\r\n  public readonly ACOES_MAPPING = { ...this.DEFAULT_MAPPING, tipo: MapperTypes.NUMBER, active: MapperTypes.BOOLEAN }\r\n\r\n  public async marcarComoAtivos(acoes: Acoes[]) {\r\n    for (let index = 0; index < acoes.length; index++) {\r\n      const element = acoes[index];\r\n\r\n      element.active = !element.active;\r\n    }\r\n\r\n    await this.saveAll(TableNames.ACOES, acoes);\r\n  }\r\n\r\n  public async listPaginado(searchStr: string, page: number, take: number): Promise<AcoesPaginado> {\r\n    const query = `\r\n    SELECT count(1) as total\r\n    FROM acoes a\r\n    WHERE $search is NULL    \r\n      OR a.codigo LIKE $search\r\n      OR a.nome LIKE $search\r\n      OR a.setor LIKE $search;\r\n      \r\n    SELECT *\r\n    FROM acoes a\r\n    WHERE $search is NULL    \r\n        OR a.codigo LIKE $search\r\n        OR a.nome LIKE $search\r\n        OR a.setor LIKE $search\r\n    ORDER BY a.\"active\" desc\r\n    LIMIT $limit OFFSET $offset;\r\n    `;\r\n\r\n    const result = await this.db.exec(query, { $search: searchStr == null ? null : `%${searchStr}%`, $offset: (page - 1) * take, $limit: take });\r\n\r\n    const parsed = this.parseSqlResultToObj(result, this.ACOES_MAPPING);\r\n\r\n    return {\r\n      total: BigNumber(parsed[0][0]?.total).toNumber(),\r\n      acoes: parsed[1] || [],\r\n    }\r\n  }\r\n\r\n  public async listActives(): Promise<Acoes[]> {\r\n    const query = `      \r\n    SELECT *\r\n    FROM acoes a\r\n    WHERE a.\"active\" = 1\r\n    `;\r\n\r\n    const result = await this.db.exec(query);\r\n\r\n    const parsed = this.parseSqlResultToObj(result, this.ACOES_MAPPING);\r\n\r\n    return parsed[0] || []\r\n  }\r\n}","export enum WorkersActions {\r\n  LOAD_ALL = \"loadAll\",\r\n  CONNECT = \"connect\",\r\n}\r\n\r\nexport interface GestaoMessage {\r\n  id: number;\r\n  action: WorkersActions;\r\n  params: any;\r\n}\r\n\r\nexport const UNIQUE_KEY = crypto.randomUUID();\r\nexport const DB_BROADCAST_CHANNEL_SW_KEY = 'DB_BROADCAST_CHANNEL_SW'","import { IDatabase } from \"../repositories/database-connector\";\r\nimport { DB_BROADCAST_CHANNEL_SW_KEY, UNIQUE_KEY } from \"./common\";\r\n\r\nconst DB_CHANNEL_SEND = `gestao-database-channel-send-${UNIQUE_KEY}`;\r\nconst DB_CHANNEL_RECEIVE = `gestao-database-channel-receive-${UNIQUE_KEY}`;\r\n\r\nexport class WorkerDatabaseConnector implements IDatabase {\r\n  private readonly broadcastSend: BroadcastChannel = new BroadcastChannel(DB_CHANNEL_SEND);\r\n  private readonly broadcastReceive: BroadcastChannel = new BroadcastChannel(DB_CHANNEL_RECEIVE);\r\n  private readonly broadcastConnect: BroadcastChannel = new BroadcastChannel(DB_BROADCAST_CHANNEL_SW_KEY);\r\n  private readonly onMessages: ((event: MessageEvent) => void)[] = [];\r\n  private readonly onExecMessages: { [key: string]: (event: MessageEvent) => void } = {};\r\n  private readonly workerName: string\r\n  private currentId = 0;\r\n\r\n  constructor(workerName: string) {\r\n    this.workerName = `sw-${workerName}`;\r\n\r\n    this.broadcastReceive.onmessage = (event) => {\r\n      const { id } = event.data;\r\n      const action = this.onExecMessages[id];\r\n\r\n      if (action == null) {\r\n        // se estiver dando erro nessa parte deve ser devido a possuir duas tabs abertas\r\n        console.debug('invalid message id', id, event);\r\n\r\n        throw new Error('invalid message id');\r\n      }\r\n\r\n      action(event);\r\n      delete this.onExecMessages[id];\r\n    }\r\n\r\n    this.broadcastReceive.onmessageerror = (event) => {\r\n      console.error('WorkerDatabaseConnector.onmessageerror', event);\r\n    }\r\n\r\n    this.broadcastConnect.postMessage({\r\n      id: 'connect',\r\n      swName: this.workerName,\r\n      sendChannel: DB_CHANNEL_SEND,\r\n      receiveChannel: DB_CHANNEL_RECEIVE,\r\n    })\r\n  }\r\n\r\n  public setOnMessage(action: (e: MessageEvent) => void) {\r\n    this.onMessages.push(action);\r\n  }\r\n\r\n  public postReceive(event: MessageEvent) {\r\n    this.broadcastReceive.postMessage(event.data);\r\n  }\r\n\r\n  public async exec(sql: string, params?: any): Promise<initSqlJs.QueryExecResult[]> {\r\n    const nextId = `${this.workerName}:exec-${this.currentId++}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.onExecMessages[nextId] = event => {\r\n        console.debug('WorkerDatabaseConnector.onmessage', event.data.id, nextId, event);\r\n\r\n        if (event.data.id === nextId) {\r\n          if (event.data.error)\r\n            reject(event.data);\r\n          else\r\n            resolve(event.data.results);\r\n        }\r\n      };\r\n\r\n      console.debug('WorkerDatabaseConnector.sending', 'exec', nextId, sql, params);\r\n\r\n      this.broadcastSend.postMessage({\r\n        id: nextId,\r\n        action: \"exec\",\r\n        sql: sql,\r\n        params: params\r\n      });\r\n    });\r\n  }\r\n\r\n  public async export(): Promise<Uint8Array> {\r\n    const nextId = `${this.workerName}:export-${this.currentId++}`;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.onExecMessages[nextId] = event => {\r\n        console.debug('WorkerDatabaseConnector.onmessage', event.data.id, nextId, event);\r\n\r\n        if (event.data.id === nextId) {\r\n          if (event.data.error)\r\n            reject(event.data);\r\n          else\r\n            resolve(event.data.buffer);\r\n        }\r\n      };\r\n\r\n      console.debug('WorkerDatabaseConnector.sending', 'export', nextId);\r\n\r\n      this.broadcastSend.postMessage({\r\n        id: nextId,\r\n        action: \"export\",\r\n      });\r\n    });\r\n  }\r\n\r\n  public async open(data?: Buffer | ArrayLike<number> | null | undefined): Promise<any> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n}","import { DefaultFields, DefaultRepository, TableNames } from \"./default\";\r\n\r\nexport interface Parametro extends DefaultFields {\r\n  chave: string\r\n  valor?: string\r\n}\r\n\r\nconst BRAPI_KEY = 'BRAPI_API_KEY';\r\n\r\nexport class ParametrosRepository extends DefaultRepository {\r\n  private _paramsDict?: { [key: string]: Parametro };\r\n\r\n  public async getDict(): Promise<{ [key: string]: Parametro }> {\r\n    if (this._paramsDict == null) {\r\n      this._paramsDict = await this.loadParamsOrDefault();\r\n    }\r\n\r\n    return this._paramsDict;\r\n  }\r\n\r\n  private async loadParamsOrDefault() {\r\n    const params = (await this.list<Parametro>(TableNames.PARAMETROS)).reduce((p, n) => { p[n.chave] = n; return p; }, {});\r\n    const nextParams = params;\r\n\r\n    nextParams[BRAPI_KEY] = params[BRAPI_KEY] || { chave: BRAPI_KEY, valor: '' };\r\n\r\n    const newParams = Object.keys(nextParams).map(x => nextParams[x]).filter(x => x.id == null);\r\n\r\n    await Promise.all(newParams.map(x => this.save(TableNames.PARAMETROS, x)));\r\n\r\n    return nextParams;\r\n  }\r\n\r\n  public async getByKey(chave: string): Promise<Parametro> {\r\n    return (await this.getDict())[chave];\r\n  }\r\n\r\n  public async getValorByKey(chave: string): Promise<string | undefined> {\r\n    return (await this.getDict())[chave]?.valor;\r\n  }\r\n\r\n  public async set(chave: string, valor?: string) {\r\n    const paramsDict = await this.getDict();\r\n    let param = paramsDict[chave];\r\n\r\n    if (param == null)\r\n      param = {} as any;\r\n\r\n    const result = await this.save(TableNames.PARAMETROS, { ...param, chave, valor });\r\n\r\n    delete this._paramsDict;\r\n\r\n    return result;\r\n  }\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { Acoes, AcoesRepository, StockType } from \"../repositories/acoes\";\r\nimport { TableNames } from \"../repositories/default\";\r\nimport { GestaoMessage, WorkersActions } from \"./common\";\r\nimport { WorkerDatabaseConnector } from \"./db-connector\";\r\nimport { ParametrosRepository } from \"../repositories/parametros\";\r\nimport moment from \"moment\";\r\n\r\n/* eslint-disable no-restricted-globals */\r\nconsole.debug('brapi-worker start');\r\n\r\nconst BRAPI_LAST_UPDATE_KEY = 'BRAPI_LAST_UPDATE';\r\nconst dbWorker = new WorkerDatabaseConnector(`brapi`);\r\nconst repository = new AcoesRepository(dbWorker);\r\nconst paramsRepository = new ParametrosRepository(dbWorker);\r\n\r\nself.onmessage = (event: MessageEvent<GestaoMessage>) => {\r\n  console.debug('brapi.onmessage', event);\r\n\r\n  switch (event.data.action) {\r\n    case WorkersActions.LOAD_ALL: {\r\n      loadAll(event.data);\r\n    }\r\n  }\r\n};\r\n\r\nasync function loadAll(data: GestaoMessage) {\r\n  const lastUpdateParam = await paramsRepository.getByKey(BRAPI_LAST_UPDATE_KEY)\r\n  const lastUpdate = moment(lastUpdateParam?.valor);\r\n  const passou14Dias = moment(new Date()).add(-14, \"days\").isSameOrAfter(lastUpdate);\r\n\r\n  if (lastUpdateParam == null || passou14Dias) {\r\n    console.debug('calling brapi');\r\n\r\n    await loadAllAndSave();\r\n    await paramsRepository.set(BRAPI_LAST_UPDATE_KEY, moment(new Date()).toISOString());\r\n\r\n    console.debug('end calling brapi');\r\n  } else console.debug('not needed to call brapi;')\r\n\r\n\r\n  self.postMessage({ id: data.id, response: { success: true } });\r\n}\r\n\r\nasync function loadAllAndSave() {\r\n  const res = await fetch('https://brapi.dev/api/quote/list');\r\n\r\n  const { stocks } = (await res.json() as BrapiResponse);\r\n\r\n  const acoesReponse = stocks.map(x => ({\r\n    nome: x.name,\r\n    codigo: x.stock,\r\n    tipo: x.sector != null ? StockType.COMPANY : StockType.OTHERS, // TODO: Add enum\r\n    active: true,\r\n    valorDeMercado: new BigNumber(x.market_cap as any),\r\n    logo: x.logo,\r\n    setor: x.sector,\r\n  }));\r\n\r\n  const acoesASalvar: Acoes[] = [];\r\n  const acoes = await repository.list<Acoes>(TableNames.ACOES);\r\n\r\n  const acoesDict = acoesToDict(acoes);\r\n\r\n  for (let index = 0; index < acoesReponse.length; index++) {\r\n    const acaoAtual = acoesReponse[index];\r\n    const acaoDoDB = acoesDict[acaoAtual.codigo];\r\n    const acaoDoDBOrNew = acaoDoDB || {} as Acoes;\r\n\r\n    acaoDoDBOrNew.active = acaoAtual.active;\r\n    acaoDoDBOrNew.codigo = acaoAtual.codigo;\r\n    acaoDoDBOrNew.logo = acaoAtual.logo;\r\n    acaoDoDBOrNew.nome = acaoAtual.nome;\r\n    acaoDoDBOrNew.setor = acaoAtual.setor as any;\r\n    acaoDoDBOrNew.tipo = acaoAtual.tipo;\r\n    acaoDoDBOrNew.valorDeMercado = acaoAtual.valorDeMercado;\r\n\r\n    if (acaoDoDB == null)\r\n      acaoDoDBOrNew.active = false;\r\n\r\n    acoesASalvar.push(acaoDoDBOrNew);\r\n  }\r\n\r\n  await repository.saveAll(TableNames.ACOES, acoesASalvar);\r\n  return acoesReponse;\r\n}\r\n\r\nfunction acoesToDict(acoesReponse: Acoes[]): { [key: string]: Acoes } {\r\n  return acoesReponse.reduce((previous, next) => {\r\n    previous[next.codigo] = next;\r\n\r\n    return previous;\r\n  }, {});\r\n}\r\n\r\nconsole.debug('brapi-worker end');\r\n\r\nexport { };\r\n\r\nexport interface BrapiResponse {\r\n  indexes: BrapiIndex[];\r\n  stocks: BrapiStock[];\r\n  availableSectors: BrapiSector[];\r\n  availableStockTypes: BrapiType[];\r\n}\r\n\r\nexport enum BrapiSector {\r\n  CommercialServices = \"Commercial Services\",\r\n  Communications = \"Communications\",\r\n  ConsumerDurables = \"Consumer Durables\",\r\n  ConsumerNonDurables = \"Consumer Non-Durables\",\r\n  ConsumerServices = \"Consumer Services\",\r\n  DistributionServices = \"Distribution Services\",\r\n  ElectronicTechnology = \"Electronic Technology\",\r\n  EnergyMinerals = \"Energy Minerals\",\r\n  Finance = \"Finance\",\r\n  HealthServices = \"Health Services\",\r\n  HealthTechnology = \"Health Technology\",\r\n  IndustrialServices = \"Industrial Services\",\r\n  Miscellaneous = \"Miscellaneous\",\r\n  NonEnergyMinerals = \"Non-Energy Minerals\",\r\n  ProcessIndustries = \"Process Industries\",\r\n  ProducerManufacturing = \"Producer Manufacturing\",\r\n  RetailTrade = \"Retail Trade\",\r\n  TechnologyServices = \"Technology Services\",\r\n  Transportation = \"Transportation\",\r\n  Utilities = \"Utilities\",\r\n}\r\n\r\nexport enum BrapiType {\r\n  Bdr = \"bdr\",\r\n  Fund = \"fund\",\r\n  Stock = \"stock\",\r\n}\r\n\r\nexport interface BrapiIndex {\r\n  stock: string;\r\n  name: string;\r\n}\r\n\r\nexport interface BrapiStock {\r\n  stock: string;\r\n  name: string;\r\n  close: number;\r\n  change: number;\r\n  volume: number;\r\n  market_cap: number | null;\r\n  logo: string;\r\n  sector: BrapiSector | null;\r\n  type: BrapiType;\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [846,543], () => (__webpack_require__(854)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"151\":\"d3f9119b\",\"543\":\"637334b7\",\"846\":\"ffe85a79\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/gestao-trade/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t854: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkgestao_trade\"] = self[\"webpackChunkgestao_trade\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(846),\n\t\t__webpack_require__.e(543)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["DatabaseConnector","constructor","currentId","worker","onMessages","this","Worker","URL","onerror","e","console","log","onmessage","event","id","data","action","error","Error","concat","exec","sql","params","nextId","Promise","resolve","reject","debug","results","postMessage","export","buffer","open","BUFFER_TYPE","RepositoryUtil","create","localDump","exportLocalDump","Buffer","from","db","repo","DefaultRepository","runMigrations","persistLocalDump","dump","localforage","DB_NAME","generateDumpFromExport","exp","toString","MapperTypes","TableNames","RUNNED_MIGRATION_CODE","DEFAULT_MAPPING","createdDate","DATE_TIME","updatedDate","monthYear","IGNORE","saveAll","tableName","items","allParams","fullCommand","forEach","x","i","execution","createInsertCommand","createUpdateCommand","command","persistDb","save","result","update","insert","delete","list","Array","isArray","parseSqlResultToObj","get","length","nextData","values","paramsPrefix","arguments","undefined","Date","keys","parseToCommand","join","map","k","mapper","res","columns","reduce","p","n","value","original","DATE","moment","toDate","NUMBER","BOOLEAN","BigNumber","Object","filter","_nextData$n","_value","format","_isBigNumber","toNumber","migrations","name","runnedMigrations","push","executedDate","exportOriginalDump","exportDump","beforeClose","window","addEventListener","message","returnValue","StockType","WorkersActions","UNIQUE_KEY","crypto","randomUUID","DB_CHANNEL_SEND","DB_CHANNEL_RECEIVE","BRAPI_KEY","BRAPI_LAST_UPDATE_KEY","dbWorker","workerName","broadcastSend","BroadcastChannel","broadcastReceive","broadcastConnect","onExecMessages","onmessageerror","swName","sendChannel","receiveChannel","setOnMessage","postReceive","repository","ACOES_MAPPING","tipo","active","marcarComoAtivos","acoes","index","element","ACOES","listPaginado","searchStr","page","take","_parsed$0$","$search","$offset","$limit","parsed","total","listActives","paramsRepository","_paramsDict","getDict","loadParamsOrDefault","PARAMETROS","chave","nextParams","valor","newParams","all","getByKey","getValorByKey","_await$this$getDict$c","set","param","self","LOAD_ALL","async","lastUpdateParam","lastUpdate","passou14Dias","add","isSameOrAfter","fetch","stocks","json","acoesReponse","nome","codigo","stock","sector","COMPANY","OTHERS","valorDeMercado","market_cap","logo","setor","acoesASalvar","acoesDict","previous","next","acoesToDict","acaoAtual","acaoDoDB","acaoDoDBOrNew","loadAllAndSave","toISOString","response","success","loadAll","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","nmd","paths","children","b","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}