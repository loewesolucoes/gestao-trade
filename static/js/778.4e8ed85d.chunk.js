(()=>{"use strict";const e=crypto.randomUUID(),a="gestao-database-channel-send-".concat(e),s="gestao-database-channel-receive-".concat(e);class o{static _init(){o.broadcastSend.onmessage=e=>{o.onMessages.forEach((a=>a(e)))},o.broadcastSend.onmessageerror=e=>{console.error("WorkerDatabase.onmessageerror",e)},o.broadcastReceive.onmessage=e=>{const{id:a}=e.data,s=this.onExecMessages[a];null!=s?(s(e),delete this.onExecMessages[a]):console.error("invalid message id",a,e)},o.broadcastReceive.onmessageerror=e=>{console.error("WorkerDatabase.onmessageerror",e)}}constructor(e){this.workerName=e,this.currentId=0}static setOnMessage(e){this.onMessages.push(e)}static postReceive(e){o.broadcastReceive.postMessage(e.data)}async exec(e,a){const s="sw-".concat(this.workerName,"-exec-").concat(this.currentId++);return new Promise(((t,r)=>{o.onExecMessages[s]=e=>{console.debug("WorkerDatabase.onmessage",e.data.id,s,e),e.data.id===s&&(e.data.error?r(e.data):t(e.data.results))},console.debug("WorkerDatabase.sending","exec",s,e,a),o.broadcastSend.postMessage({id:s,action:"exec",sql:e,params:a})}))}async export(){const e="sw-".concat(this.workerName,"-export-").concat(this.currentId++);return new Promise(((a,s)=>{o.onExecMessages[e]=o=>{console.debug("WorkerDatabase.onmessage",o.data.id,e,o),o.data.id===e&&(o.data.error?s(o.data):a(o.data.buffer))},console.debug("WorkerDatabase.sending","export",e),o.broadcastSend.postMessage({id:e,action:"export"})}))}async open(e){throw new Error("Method not implemented.")}}o.broadcastSend=new BroadcastChannel(a),o.broadcastReceive=new BroadcastChannel(s),o.onMessages=[],o.onExecMessages={},o._init(),console.debug("database-broadcast-worker start");const t=new Worker("".concat("/gestao-trade","/worker.sql-wasm.js"));o.setOnMessage((e=>{console.debug("database-broadcast.setOnMessage",e),t.postMessage(e.data)})),t.onerror=e=>console.error("Database worker error: ",e),t.onmessage=e=>{var a;console.debug("database-broadcast.onmessage",e),null!==(a=e.data.id)&&void 0!==a&&a.startsWith("sw-")?o.postReceive(e):self.postMessage(e.data)},self.onmessage=e=>{console.debug("database.onmessage",e),t.postMessage(e.data)},console.debug("database-broadcast-worker end")})();
//# sourceMappingURL=778.4e8ed85d.chunk.js.map